on:
  push:
    branches: [ staging, trying, master ]
  pull_request:

name: Continuous integration

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
    needs: [check, ci-linux, ci-serde]
    steps:
      - name: Done
        run: exit 0

  check:
    name: Cargo check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        TARGET: [x86_64-unknown-linux-gnu, x86_64-apple-darwin, x86_64-pc-windows-msvc]

    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: ${{ matrix.TARGET }}

      - name: Cache Dependencies
        uses: Swatinem/rust-cache@v1
        with:
          key: ${{ matrix.TARGET }}

      - uses: actions-rs/cargo@v1
        with:
          command: check
          args: --target ${{ matrix.TARGET }}

  prebuild:
    name: Prebuild
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable, nightly, 1.46.0]

    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true

      - name: Cache
        uses: Swatinem/rust-cache@v1
        with:
          sharedKey: prebuilded

      - name: Self install
        run: |
          cargo install svd2rust --path .

  ci-linux:
    runs-on: ubuntu-latest
    needs: [check, prebuild]
    strategy:
      matrix:
        # All generated code should be running on stable now
        rust: [stable]

        # All vendor files we want to test on stable
        vendor: [Atmel, Freescale_1, Freescale_2, Fujitsu_1, Fujitsu_2, Holtek, Microchip, Nordic, Nuvoton, NXP, RISC-V, SiliconLabs, Spansion, STMicro, Toshiba]

        # Options are all, none, strict and const
        options: [all, none]
        exclude:
          - vendor: Fujitsu_1
            options: all
          - vendor: Fujitsu_2
            options: all
          - vendor: Spansion
            options: all
          - vendor: STMicro
            options: all
          - vendor: Nuvoton
            options: all
        include:
          # Test MSRV
          - rust: 1.46.0
            vendor: Nordic

          # Use nightly for architectures which don't support stable
          - rust: nightly
            vendor: OTHER

          # Use nightly for architectures which don't support stable
          - rust: nightly
            vendor: Espressif

    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true

      - name: Cache
        uses: Swatinem/rust-cache@v1
        with:
          sharedKey: prebuilded

      - name: Run CI script for `${{ matrix.vendor }}` under rust `${{ matrix.rust }}` with options=`${{ matrix.options }}`
        env:
          VENDOR: ${{ matrix.vendor }}
          OPTIONS: ${{ matrix.options }} 
        run: bash ci/script.sh

  ci-serde:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Cache
        uses: Swatinem/rust-cache@v1
        with:
          key: svdtools-0.2.0

      - name: Install svdtools
        run: |
          cargo install svdtools --version 0.2.0 --target-dir target

      - name: Run CI script
        run: |
          wget https://stm32-rs.github.io/stm32-rs/stm32f411.svd.patched
          svdtools convert --input-format xml stm32f411.svd.patched stm32f411.yaml
          cargo run --release -- -i stm32f411.yaml
